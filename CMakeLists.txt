PROJECT(VIEWNUP2)
cmake_minimum_required(VERSION 2.8)
enable_language(C)


SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake-modules")

SET(VIEWNUP2_PACKAGE_VERSION_MAJOR 1)
SET(VIEWNUP2_PACKAGE_VERSION_MINOR 9)
SET(VIEWNUP2_PACKAGE_VERSION_PATCH 90)
SET(PACKAGE "viewnup2")
SET(PACKAGE_BUGREPORT "Vladimir Fonov <vladmir.fonov@gmail.com>")

SET(PACKAGE_NAME "viewnup2")
SET(PACKAGE_VERSION
"${VIEWNUP2_PACKAGE_VERSION_MAJOR}.${VIEWNUP2_PACKAGE_VERSION_MINOR}.${VIEWNUP2_PACKAGE_VERSION_PATCH}")
SET(PACKAGE_STRING  "${PACKAGE_NAME} ${PACKAGE_VERSION}")

SET(CPACK_PACKAGE_NAME ${PACKAGE_NAME})
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "viewnup2 minc visualisation , beta")
SET(CPACK_PACKAGE_VENDOR "Brain Imaging Center, Montreal Neurological Institute, McGill University")
SET(CPACK_PACKAGE_VERSION_MAJOR ${VIEWNUP2_PACKAGE_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${VIEWNUP2_PACKAGE_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${VIEWNUP2_PACKAGE_VERSION_PATCH})
SET(CPACK_PACKAGE_CONTACT ${PACKAGE_BUGREPORT})
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "viewnup2-${PACKAGE_VERSION}")
SET(CPACK_MONOLITHIC_INSTALL ON)
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/README.txt")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/COPYING.txt")

EXEC_PROGRAM(uname ARGS "-m" OUTPUT_VARIABLE CMAKE_SYSTEM_PROCESSOR)
SET(CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
SET(CPACK_STRIP_FILES ON)
SET(CMAKE_SKIP_RPATH OFF)
SET(CMAKE_SKIP_BUILD_RPATH  FALSE)
SET(CMAKE_SKIP_INSTALL_RPATH FALSE)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib${LIB_SUFFIX}")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE)

SET(SYSTEM_NAME ${CPACK_SYSTEM_NAME})

IF(NOT DEFINED CPACK_SYSTEM_NAME)
  SET(SYSTEM_NAME ${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR})
ENDIF(NOT DEFINED CPACK_SYSTEM_NAME)

IF(${CMAKE_SYSTEM_NAME} MATCHES Windows)
  IF(CMAKE_CL_64)
    SET(SYSTEM_NAME win64-${CMAKE_SYSTEM_PROCESSOR})
  ELSE(CMAKE_CL_64)
    SET(SYSTEM_NAME win32-${CMAKE_SYSTEM_PROCESSOR})
  ENDIF(CMAKE_CL_64)
ELSE(${CMAKE_SYSTEM_NAME} MATCHES Windows)
  IF(${CMAKE_SYSTEM_NAME} MATCHES Linux )
    EXEC_PROGRAM(lsb_release ARGS "-s -i" OUTPUT_VARIABLE SYSTEM_ID)
    EXEC_PROGRAM(lsb_release ARGS "-s -r" OUTPUT_VARIABLE SYSTEM_RELEASE)
    SET(SYSTEM_NAME
    "${SYSTEM_ID}_${SYSTEM_RELEASE}-${CMAKE_SYSTEM_PROCESSOR}")
  ENDIF(${CMAKE_SYSTEM_NAME} MATCHES Linux )
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES Windows)

SET(CPACK_PACKAGE_FILE_NAME "viewnup2-${PACKAGE_VERSION}-${SYSTEM_NAME}")


#CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h @ONLY)
#INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

FIND_PACKAGE(LIBMINC REQUIRED)
FIND_PACKAGE(PkgConfig REQUIRED)

IF(PKG_CONFIG_FOUND)
    INCLUDE(FindPkgConfig)

    PKG_CHECK_MODULES(GTK2 gtk+-2.0)
   
    IF(WIN32)
        PKG_CHECK_MODULES(GTKGL gtkglext-win32-1.0)
    ELSE(WIN32)
        PKG_CHECK_MODULES(GTKGL gtkglext-x11-1.0)
    ENDIF(WIN32)
ENDIF(PKG_CONFIG_FOUND)

include_directories (${GTKGL_INCLUDE_DIRS})
link_directories (${GTKGL_LIBRARY_DIRS})
add_definitions (${GTKGL_CFLAGS_OTHER})
add_definitions(${GTKGL_DEFINITIONS})

IF(HAVE_MINC1)
  ADD_DEFINITIONS(-DHAVE_MINC -DHAVE_MINC1)
ENDIF(HAVE_MINC1)

INCLUDE( ${LIBMINC_USE_FILE} )
LINK_LIBRARIES(${LIBMINC_LIBRARIES})



ADD_EXECUTABLE(viewnup 
  callbacks.h 
  geometry.h 
  gtk_gl.h 
  interface.h 
  minc_io.h 
  trackball.h 
  viewnup.h 
  pixmaps.h 
  lookup_table.h  
  callbacks.c  
  geometry.c  
  gtk_gl.c  
  interface.c  
  lookup_table.c  
  minc_io.c  
  pixmaps.c  
  trackball.c  
  viewnup.c
)

TARGET_LINK_LIBRARIES(viewnup ${GTKGL_LIBRARIES})
INSTALL( TARGETS viewnup  DESTINATION bin)

# setup additional variables for making Debian package
INCLUDE(DebianPackageAddons)

# according to
# http://www.cmake.org/pipermail/cmake/2011-November/047137.html it's better
# to put this in the end
INCLUDE(CPack)
